{"version":3,"sources":["scripts/main.js"],"names":["observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","threshold","document","querySelectorAll","title","observe","compareObserver","querySelector","moveFreeObserver","contactObserver","detailsObserver"],"mappings":";AAEA,aAEA,IAAMA,EAAW,IAAIC,qBAAqB,SAAAC,GACxCA,EAAQC,QAAQ,SAAAC,GACVA,EAAMC,gBACRD,EAAME,OAAOC,UAAUC,IAAI,6BAG9B,CAAEC,UAAW,KAEhBC,SAASC,iBAAiB,kBAAkBR,QAAQ,SAAAS,GAClDZ,EAASa,QAAQD,KAGnB,IAAME,EAAkB,IAAIb,qBAAqB,SAAAC,GAE/CA,EAAQC,QAAQ,SAAAC,GAEVA,EAAMC,gBAERD,EAAME,OAAOC,UAAUC,IAAI,kCAKjCM,EAAgBD,QAAQH,SAASK,cAAc,uBAE/C,IAAMC,EAAmB,IAAIf,qBAAqB,SAAAC,GAEhDA,EAAQC,QAAQ,SAAAC,GAEVA,EAAMC,gBAERD,EAAME,OAAOC,UAAUC,IAAI,uCAKjCQ,EAAiBH,QAAQH,SAASK,cAAc,4BAEhD,IAAME,EAAkB,IAAIhB,qBAAqB,SAAAC,GAE/CA,EAAQC,QAAQ,SAAAC,GAEVA,EAAMC,gBAERD,EAAME,OAAOC,UAAUC,IAAI,iCAKjCS,EAAgBJ,QAAQH,SAASK,cAAc,sBAE/C,IAAMG,EAAkB,IAAIjB,qBAAqB,SAAAC,GAC/CA,EAAQC,QAAQ,SAAAC,GACVA,EAAMC,gBACRD,EAAME,OAAOC,UAAUC,IAAI,2BAG9B,CAAEC,UAAW,KAEhBC,SAASC,iBAAiB,gBAAgBR,QAAQ,SAAAS,GAChDM,EAAgBL,QAAQD","file":"main.2d9bc555.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-undef */\n'use strict';\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      entry.target.classList.add('section-title--animate');\n    }\n  });\n}, { threshold: 0.5 });\n\ndocument.querySelectorAll('.section-title').forEach(title => {\n  observer.observe(title);\n});\n\nconst compareObserver = new IntersectionObserver(entries => {\n  // Loop over the entries\n  entries.forEach(entry => {\n    // If the element is visible\n    if (entry.isIntersecting) {\n      // Add the animation class\n      entry.target.classList.add('compare__products--animate');\n    }\n  });\n});\n\ncompareObserver.observe(document.querySelector('.compare__products'));\n\nconst moveFreeObserver = new IntersectionObserver(entries => {\n  // Loop over the entries\n  entries.forEach(entry => {\n    // If the element is visible\n    if (entry.isIntersecting) {\n      // Add the animation class\n      entry.target.classList.add('move-free__description--animate');\n    }\n  });\n});\n\nmoveFreeObserver.observe(document.querySelector('.move-free__description'));\n\nconst contactObserver = new IntersectionObserver(entries => {\n  // Loop over the entries\n  entries.forEach(entry => {\n    // If the element is visible\n    if (entry.isIntersecting) {\n      // Add the animation class\n      entry.target.classList.add('contact__wrapper--animate');\n    }\n  });\n});\n\ncontactObserver.observe(document.querySelector('.contact__wrapper'));\n\nconst detailsObserver = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      entry.target.classList.add('description--animate');\n    }\n  });\n}, { threshold: 0.5 });\n\ndocument.querySelectorAll('.description').forEach(title => {\n  detailsObserver.observe(title);\n});\n"]}